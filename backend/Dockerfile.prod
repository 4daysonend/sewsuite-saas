FROM node:18-alpine AS builder

# Build in a separate stage
WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY . .
RUN npm run build

# Runtime stage with minimal footprint
FROM node:18-alpine

# Create non-root user
RUN addgroup -g 10001 appgroup && \
    adduser -u 10000 -G appgroup -s /bin/sh -D appuser

# Set working directory with proper permissions
WORKDIR /app
RUN chown -R appuser:appgroup /app

# Install production dependencies only
COPY --from=builder /app/package*.json ./
RUN npm ci --only=production

# Copy built application
COPY --from=builder --chown=appuser:appgroup /app/dist ./dist
COPY --from=builder --chown=appuser:appgroup /app/node_modules ./node_modules

# Set security headers and drop capabilities
ENV NODE_ENV=production
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=60s --retries=3 \
  CMD wget -q -O - http://localhost:3000/health || exit 1

EXPOSE 3000
CMD ["node", "dist/main"]